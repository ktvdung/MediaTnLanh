<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j49ThXgAAAAASUVORK5CYII=
</value>
  </data>
</root>
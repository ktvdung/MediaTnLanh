<Application x:Class="MediaTinLanh.UI.WPF.App"
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MediaTinLanh.UI.WPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="RobotoBlack">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoBlackItalic">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoBold">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoBoldItalic">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoItalic">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoLight">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoLightItalic">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoMedium">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoRegular">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoThin">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>
            <FontFamily x:Key="RobotoThinItalic">pack://application:,,,/Skin/Fonts/Roboto/#Roboto</FontFamily>

            <Style x:Key="MDTLMaterialDesignRaisedDarkButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Background" Value="#535353"/>
                <Setter Property="BorderBrush" Value="#424242"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" 
                                        CornerRadius="{Binding Path=(wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="0 0 1 0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border" />
                                        <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                             Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="{TemplateBinding Height}"
                                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
                                             Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Opacity)}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center">
                                        </ProgressBar>
                                    </Grid>
                                </AdornerDecorator>
                                <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="5 0 5 0" FontFamily="{StaticResource RobotoRegular}" FontSize="12"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <wpf:Ripple.Clip>
                                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                            <Binding ElementName="border" Path="ActualWidth" />
                                            <Binding ElementName="border" Path="ActualHeight" />
                                            <Binding ElementName="border" Path="CornerRadius" />
                                            <Binding ElementName="border" Path="BorderThickness" />
                                        </MultiBinding>
                                    </wpf:Ripple.Clip>
                                </wpf:Ripple>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#424242" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>

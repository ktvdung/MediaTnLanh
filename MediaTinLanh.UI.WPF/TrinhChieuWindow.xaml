<Window x:Class="MediaTinLanh.UI.WPF.TrinhChieuWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MediaTinLanh.UI.WPF"
        mc:Ignorable="d"
        Title="TrinhChieuWindow" 
        x:Name="windowTrinhChieu" WindowState="Maximized" WindowStyle="None" Style="{DynamicResource WindowStyle}" MouseDown="Window_MouseDown">
    <Window.Resources>
        <local:MathConverter x:Key="mathConverter"/>
        <local:MarginConverter x:Key="marginConverter"/>
        <local:TrangThaiConverter x:Key="TrangThaiConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>
        <!-- Colors -->
        <Color x:Key="ExtWhiteColor">#FFEFEFEF</Color>
        <Color x:Key="ExtGrayColor">#535353</Color>
        <Color x:Key="ExtBrownColor">#FFAD9579</Color>
        <Color x:Key="ExtGrayDarkerColor">#424242</Color>
        <Color x:Key="ExtGrayDarkestColor">#282828</Color>

        <SolidColorBrush x:Key="TextColor" Color="{DynamicResource ExtWhiteColor}"/>
        <SolidColorBrush x:Key="SeperateLineColor" Color="{DynamicResource ExtGrayColor}"/>
        <!-- Style -->
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                CornerRadius="2"
                                GlassFrameThickness="0"
                                NonClientFrameEdges="None"
                                ResizeBorderThickness="3"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AccountButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderButton" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="Background" >
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1,0,1,0" BorderBrush="#424242">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkerColor}"></SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ExtWhiteColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource ExtWhiteColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ExtGrayDarkestColor}" />
                                                    <GradientStop Color="{DynamicResource ExtGrayDarkestColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                    <Grid>
                                        <Viewbox Width="8" Height="8">
                                            <Path
                                              Visibility="Collapsed"
                                              x:Name="CheckMark"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 16.36 0.00 L 23.00 0.00 L 23.00 0.66 C 18.30 6.49 14.21 12.75 10.10 19.00 L 9.40 19.00 C 6.50 15.61 3.37 12.42 0.00 9.49 L 0.00 8.04 C 1.01 7.44 2.01 6.82 3.01 6.20 C 5.21 9.07 7.65 11.75 9.99 14.51 C 12.36 9.78 14.16 4.80 16.36 0.00 Z">
                                                <Path.Stroke>
                                                    <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                                </Path.Stroke>
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                                </Path.Fill>
                                            </Path>
                                        </Viewbox>
                                        <Path Visibility="Collapsed"
                                              Width="7"
                                              Height="7"
                                              x:Name="InderminateMark"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayDarkerColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayDarkestColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtWhiteColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Resource -->
        <Button x:Key="Restore">
            <Button.Template>
                <ControlTemplate>
                    <Border Name="borderMaxRes" Style="{DynamicResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Skin\Images\main\restore.png" Width="{Binding ElementName=btnMaximize, Path=ActualWidth}"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Key="Maximize">
            <Button.Template>
                <ControlTemplate>
                    <Border Name="borderMaxRes" Style="{DynamicResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Skin\Images\main\maximize.png" Width="{Binding ElementName=btnMaximize, Path=ActualWidth}"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Window.Resources>
    <Window.Background>
        <!--<DrawingBrush>
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <ImageDrawing  Rect="0,0,10,10" ImageSource="Skin\Images\main\Background.png"/>
                    <DrawingGroup Opacity="0.102">
                        <ImageDrawing Rect="0,0,10,10" ImageSource="Skin\Images\main\logo gray.png"/>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>-->
        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
    </Window.Background>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="150*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Column="1" Grid.Row="1">
            <Grid x:Name="gridTrinhChieu" Width="{Binding ActualWidth}" Height="{Binding ActualHeight}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*6}"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--#region Menu -->
                <StackPanel x:Name="stackpanelMenu" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Grid x:Name="gridMenu">
                        <Grid.Resources >
                            <!--<Style TargetType="Border" >
                                    <Setter Property="Padding" Value="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.006}" />
                                </Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Margin" Value="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.006}"></Setter>
                                </Style>-->
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" BorderBrush="Transparent" BorderThickness="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.005}">
                            <Image Source="Skin\Images\trinh-chieu\LogoLeft.png"/>
                        </Border>
                        <Border Grid.Column="1" Grid.Row="0" BorderBrush="Transparent" BorderThickness="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.005}">
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="btnThanCa" Style="{DynamicResource MenuButton}"
                                        Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}" Click="btnThanhCa_Click">
                                    <TextBlock x:Name="menuThanhCa"
                                     Foreground="White"
                                     FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}" 
                                     FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                     LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Thánh Ca"/>
                                </Button>
                                <Button x:Name="btnKinhThanh" Style="{StaticResource MenuButton}" 
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}" Click="btnKinhThanh_Click">
                                    <TextBlock x:Name="menuKinhThanh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Kinh Thánh"/>
                                </Button>
                                <Button x:Name="btnVideo" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuVideo"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Video"/>
                                </Button>
                                <Button x:Name="btnHinhAnh" Style="{StaticResource MenuButton}" 
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuHinhAnh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Hình ảnh"/>
                                </Button>
                                <Button x:Name="btnDoKinhThanh" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuDoKinhThanh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Đố Kinh Thánh"/>
                                </Button>
                                <Button x:Name="btnTruyenTranh" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuTruyenTranh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Truyện tranh"/>
                                </Button>
                                <Button x:Name="btnTranhToMau" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuTranhToMau"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Tranh Tô Màu"/>
                                </Button>
                                <Button x:Name="btnThietKe" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuThietKe"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Thiết Kế"/>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                </StackPanel>
                <!--#endregion Menu -->

                <!--#region Window buttons -->
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <Button x:Name="btnMinimize" Style="{StaticResource WindowButton}"  VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnMinimize_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Border Style="{StaticResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Skin\Images\main\minimize.png" Width="{Binding ElementName=btnMinimize, Path=ActualWidth}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnMaximizeRestore" Style="{StaticResource WindowButton}" VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnMaximizeRestore_Click">
                        <DynamicResource ResourceKey="Restore"/>
                    </Button>
                    <Button x:Name="btnClose" Style="{StaticResource WindowButton}" VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnClose_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Border Style="{StaticResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Skin\Images\main\close.png" Width="{Binding ElementName=btnClose, Path=ActualWidth}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                <!--#endregion Window Buttons -->

                <!--#region Conent -->
                <StackPanel x:Name="mainThanhCa" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible">
                    <StackPanel.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <TabControl x:Name="tabControl" TabStripPlacement="Top" Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.9}">
                        <TabControl.Resources>
                            <Style TargetType="TabControl">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <!--<Style TargetType="TabPanel">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>-->
                            <Style TargetType="TabItem">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="FontFamily" Value="{StaticResource RobotoMedium}"/>
                                <Setter Property="FontSize" Value="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.02}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabItem">
                                            <Grid Name="Panel">
                                                <Border BorderBrush="Gray" BorderThickness="0.5">
                                                    <ContentPresenter x:Name="ContentSite"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"
                                                              ContentSource="Header"
                                                              Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*20}"
                                                              Margin="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}"/>
                                                </Border>

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Panel" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="TabItem.Foreground">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="False">
                                                    <Setter TargetName="Panel" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtGrayDarkerColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Thư viện bài hát">
                            <Grid x:Name="gridContentThuVienBH">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="5.5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <DockPanel x:Name="panelTimKiemBH" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left"
                                   Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*40}">
                                    <Grid x:Name="gridSearch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1.5*"/>
                                            <RowDefinition Height="20*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0"
                                        Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*3}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtGrayDarkerColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="5"></Setter>
                                                </Style>
                                            </Border.Style>
                                            <StackPanel x:Name="panelTextboxSearch" Orientation="Horizontal">
                                                <TextBox x:Name="txtTimBaiHat" TextAlignment="Left" HorizontalContentAlignment="Stretch" BorderThickness="0"
                                                 FontFamily="{DynamicResource RobotoMedium}"
                                                 Foreground="{DynamicResource TextColor}"
                                                 Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*30}"
                                                 FontSize="{Binding ElementName=panelTextboxSearch, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.7}">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <Setter Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <Button x:Name="btnTimKiem" 
                                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Foreground">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="{DynamicResource ExtWhiteColor}"></SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="Button">
                                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent">
                                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="FontSize" Value="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1.5}"></Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkerColor}"></SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <TextBlock Text="Tìm kiếm"></TextBlock>
                                                </Button>
                                            </StackPanel>
                                        </Border>
                                        <Border Grid.Row="1" BorderBrush="Transparent" BorderThickness="1.5"
                                        Width="{Binding ElementName=panelTimKiemBH, Path=ActualWidth}">
                                            <ListBox x:Name="listBoxLoaiThanhCa"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                                     BorderBrush="Transparent" BorderThickness="0"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                     ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                <ListBox.Resources>
                                                    <Style TargetType="ListBox">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>

                                                </ListBox.Resources>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  Margin="{TemplateBinding Padding}">
                                                                        </ContentPresenter>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel
                                                    x:Name="wrapPanel"
                                                    IsItemsHost="True"
                                                    Orientation="Horizontal"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                    MaxWidth="{Binding ElementName=panelTimKiemBH, Path=ActualWidth}"/>
                                                        <!--<StackPanel x:Name="panelListBox" Orientation="Horizontal" 
                                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate DataType="ListBoxItem">
                                                        <StackPanel x:Name="panelLoaiThanhCa" Orientation="Horizontal"
                                                            HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                                            MaxWidth="{Binding ElementName=panelTimKiemBH, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/3}">
                                                            <CheckBox x:Name="ckbLoaiThanhCa" Style="{DynamicResource CheckBoxStyle}"
                                                              IsChecked="{Binding IsChecked}"
                                                              BorderBrush="White" BorderThickness="1">
                                                            </CheckBox>
                                                            <TextBlock Text="{Binding Path=Ten}" Foreground="White"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               FontFamily="{DynamicResource RobotoMedium}"
                                                               FontSize="{Binding ElementName=panelTimKiemBH, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/45}"
                                                               TextWrapping="Wrap"/>
                                                        </StackPanel>

                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Border>
                                        <Border Grid.Row="2">
                                            <ListView x:Name="listViewThanhCa" Background="Transparent" BorderThickness="0"
                                              ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                                        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="ListViewItem">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <Border x:Name="Selection" Visibility="Collapsed" />
                                                                        <!-- This is used when GridView is put inside the ListView -->
                                                                        <GridViewRowPresenter Grid.RowSpan="2"
                                                                                      Margin="{TemplateBinding Padding}"
                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.View>
                                                    <GridView x:Name="gridViewBaiHat">
                                                        <GridViewColumn Header="Tên bài hát"
                                                                Width="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/4*2}">
                                                            <GridViewColumn.HeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                                    <Setter Property="BorderThickness" Value="0"></Setter>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="GridViewColumnHeader">
                                                                                <Grid>
                                                                                    <Border x:Name="HeaderBorder"
                                                                                    BorderThickness="0"
                                                                                    BorderBrush="Transparent"
                                                                                    Background="Transparent"
                                                                                    Padding="2,0,2,0">
                                                                                        <ContentPresenter Name="HeaderContent"
                                                                                                  TextElement.Foreground="White"
                                                                                                  Margin="0,0,0,1"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter TargetName="HeaderBorder" Property="Background">
                                                                                            <Setter.Value>
                                                                                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="FontFamily" Value="{DynamicResource RobotoMedium}"></Setter>
                                                                    <Setter Property="FontSize" 
                                                                    Value="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.03}"></Setter>
                                                                </Style>
                                                            </GridViewColumn.HeaderContainerStyle>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <Border BorderBrush="{DynamicResource SeperateLineColor}" BorderThickness="0,0,2,0" Margin="0,0,0,-5">
                                                                        <TextBlock Text="{Binding Ten}" Margin="0,2,0,2"
                                                                       HorizontalAlignment="Left"
                                                                       Foreground="{DynamicResource TextColor}"
                                                                       FontFamily="{DynamicResource RobotoMedium}"
                                                                       FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.022}"/>
                                                                    </Border>
                                                                    <!--<TextBlock Text="{Binding Ten}" 
                                                                       HorizontalAlignment="Center"
                                                                       Foreground="{DynamicResource TextColor}"
                                                                       FontFamily="{DynamicResource RobotoMedium}"
                                                                       FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.025}"/>-->
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Thể loại"
                                                                Width="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/4*1}">
                                                            <GridViewColumn.HeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                                    <Setter Property="BorderThickness" Value="0"></Setter>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="GridViewColumnHeader">
                                                                                <Grid>
                                                                                    <Border Name="HeaderBorder"
                                                                                    BorderThickness="0"
                                                                                    BorderBrush="Transparent"
                                                                                    Background="Transparent"
                                                                                    Padding="2,0,2,0">
                                                                                        <ContentPresenter Name="HeaderContent"
                                                                                                  TextElement.Foreground="White"
                                                                                                  Margin="0,0,0,1"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter TargetName="HeaderBorder" Property="Background">
                                                                                            <Setter.Value>
                                                                                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="FontFamily" Value="{DynamicResource RobotoMedium}"></Setter>
                                                                    <Setter Property="FontSize" Value="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.03}"></Setter>
                                                                </Style>
                                                            </GridViewColumn.HeaderContainerStyle>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <Border BorderBrush="{DynamicResource SeperateLineColor}" BorderThickness="0,0,2,0" Margin="0,0,0,-5">
                                                                        <TextBlock Text="{Binding Loai.Ten}" Margin="0,2,0,2" HorizontalAlignment="Center"
                                                                       Foreground="{DynamicResource TextColor}"
                                                                       FontFamily="{DynamicResource RobotoMedium}"
                                                                       FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.022}"/>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Trạng thái"
                                                                Width="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/4*1}">
                                                            <GridViewColumn.HeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                                    <Setter Property="BorderThickness" Value="0"></Setter>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="GridViewColumnHeader">
                                                                                <Grid>
                                                                                    <Border Name="HeaderBorder"
                                                                                    BorderThickness="0"
                                                                                    BorderBrush="Transparent"
                                                                                    Background="Transparent"
                                                                                    Padding="2,0,2,0">
                                                                                        <ContentPresenter Name="HeaderContent"
                                                                                                  TextElement.Foreground="White"
                                                                                                  Margin="0,0,0,1"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter TargetName="HeaderBorder" Property="Background">
                                                                                            <Setter.Value>
                                                                                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="FontFamily" Value="{DynamicResource RobotoMedium}"></Setter>
                                                                    <Setter Property="FontSize" Value="{Binding ElementName=listViewThanhCa, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.03}"></Setter>
                                                                </Style>
                                                            </GridViewColumn.HeaderContainerStyle>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <!--<TextBlock Text="{Binding TrangThai, Converter={StaticResource TrangThaiConverter}}" 
                                                                       Foreground="{DynamicResource TextColor}"
                                                                       FontFamily="{DynamicResource RobotoMedium}"
                                                                       FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.024}">
                                                                    </TextBlock>-->
                                                                    <Grid>
                                                                        <Button Content="Xem"
                                                                                Visibility="{Binding TrangThai, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                FontFamily="{DynamicResource RobotoMedium}"
                                                                                FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.024}">
                                                                            <Button.Style>
                                                                                <Style TargetType="Button">
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="Button">
                                                                                                <Border Padding="5,0,5,0">
                                                                                                    <TextBlock><ContentPresenter /></TextBlock>
                                                                                                </Border>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                                                                                    <Style.Triggers>
                                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                                            <Setter Property="Foreground">
                                                                                                <Setter.Value>
                                                                                                    <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Trigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Button.Style>
                                                                        </Button>
                                                                        <Button Content="Tải về"
                                                                                Visibility="{Binding TrangThai, Converter={StaticResource BoolToHiddenConverter}}"
                                                                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                FontFamily="{DynamicResource RobotoMedium}"
                                                                                FontSize="{Binding ElementName=listViewThanhCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.024}">
                                                                            <Button.Style>
                                                                                <Style TargetType="Button">
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="Button">
                                                                                                <Border Padding="5,0,5,0">
                                                                                                    <TextBlock><ContentPresenter /></TextBlock>
                                                                                                </Border>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                                                                                    <Style.Triggers>
                                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                                            <Setter Property="Foreground">
                                                                                                <Setter.Value>
                                                                                                    <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Trigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Button.Style>
                                                                        </Button>
                                                                    </Grid>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </Border>
                                    </Grid>
                                </DockPanel>
                                <DockPanel Grid.Column="1" Grid.Row="0" 
                                           Margin="0,5,0,5"
                                           Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}">
                                    <Grid x:Name="gridPreview" Width="{Binding ActualWidth}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition Height="10*"></RowDefinition>
                                            <RowDefinition Height="2*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Grid.ColumnSpan="5">
                                            <TextBlock Text="Nội dung bài hát" Foreground="{DynamicResource TextColor}"
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               LineHeight="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.02}"
                                               FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.03}"/>
                                        </Border>
                                        <Border Grid.Row="1" Grid.ColumnSpan="5">
                                            <TextBlock x:Name="tblNoiDungBaiHat" TextAlignment="Left" TextWrapping="Wrap" 
                                               IsHyphenationEnabled="True" LineStackingStrategy="BlockLineHeight"
                                               Foreground="{DynamicResource TextColor}"
                                               FontFamily="{DynamicResource RobotoLight}"
                                               Padding="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.010}"
                                               LineHeight="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.013}"
                                               FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.011}"
                                               Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi dolor sem, porttitor ut egestas at, auctor vel lectus. Sed mattis volutpat arcu eget gravida. Phasellus mattis vitae mi in tincidunt. Morbi felis lorem, tristique eget dolor eget, tempus efficitur est. Nam vestibulum malesuada neque, vel faucibus sapien porta sed. Proin vestibulum volutpat eleifend. Pellentesque tortor massa, gravida sed commodo id, euismod eu mauris. Nam condimentum dolor dui, nec semper turpis dapibus sed. Praesent nec convallis neque, eu porta orci. Mauris semper ex erat, nec finibus leo luctus vel.&#xA;&#xA;Aliquam vel lacus tristique, blandit metus et, porttitor justo. Maecenas porta quam a sem lacinia euismod. Ut mollis tempus mauris vitae maximus. Nam rutrum consequat pharetra. Nunc blandit, nulla sit amet luctus dignissim, metus libero maximus libero, sed finibus sem magna ac nibh. Interdum et malesuada fames ac ante ipsum primis in faucibus. Aenean vel hendrerit orci. Nunc scelerisque commodo lorem, nec bibendum mi tempor vel. In ullamcorper ultrices aliquet. Donec ac sapien sed est feugiat feugiat. Suspendisse non tellus vulputate, pulvinar urna in, placerat dolor. Aenean aliquet ut magna id malesuada.&#xA;&#xA;Suspendisse at tincidunt orci, quis scelerisque erat. In cursus erat turpis, sit amet fermentum tellus fermentum eget. Cras non hendrerit ex. Morbi facilisis erat neque, id laoreet sem viverra molestie. Ut accumsan sagittis mauris ac scelerisque. Sed sagittis nisl nec turpis tempus vehicula. Ut fringilla nibh ac libero pretium, eget ullamcorper dui feugiat.&#xA;&#xA;Cras non hendrerit ex. Morbi facilisis erat neque, id laoreet sem viverra molestie. Ut accumsan sagittis mauris ac scelerisque. Sed sagittis nisl nec turpis tempus vehicula. Ut fringilla nibh ac libero pretium, eget ullamcorper dui feugiat."/>
                                        </Border>
                                        <Border Grid.Row="2" Grid.Column="0" >
                                            <Button x:Name="btnTaiPPTX169" Style="{StaticResource MenuButton}"
                                                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}"
                                                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}">
                                                <TextBlock x:Name="tbxTaiPPTX169"
                                                   Foreground="{DynamicResource TextColor}"
                                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}" 
                                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Tải PPTX 16:9"/>
                                            </Button>
                                        </Border>
                                        <Border Grid.Row="2" Grid.Column="1" >
                                            <Button x:Name="btnTaiPPTX43" Style="{StaticResource MenuButton}"
                                                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}"
                                                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}">
                                                <TextBlock x:Name="tbxTaiPPTX43"
                                                   Foreground="{DynamicResource TextColor}"
                                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}" 
                                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Tải PPTX 4:3"/>
                                            </Button>
                                        </Border>
                                        <Border Grid.Row="2" Grid.Column="2" >
                                            <Button x:Name="btnTaiTXT" Style="{StaticResource MenuButton}"
                                                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}"
                                                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}">
                                                <TextBlock x:Name="tbxTaiTXT"
                                                   Foreground="{DynamicResource TextColor}"
                                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}" 
                                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Tải TXT"/>
                                            </Button>
                                        </Border>
                                        <Border Grid.Row="2" Grid.Column="3" >
                                            <Button x:Name="btnTaiPDF" Style="{StaticResource MenuButton}"
                                                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}"
                                                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}">
                                                <TextBlock x:Name="tbxTaiPDF"
                                                   Foreground="{DynamicResource TextColor}"
                                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}" 
                                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Tải PDF"/>
                                            </Button>
                                        </Border>
                                        <Border Grid.Row="2" Grid.Column="4" >
                                            <Button x:Name="btnBaoLoi" Style="{StaticResource MenuButton}"
                                                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}"
                                                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}">
                                                <TextBlock x:Name="tbxBaoLoi"
                                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}" 
                                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Báo Lỗi">
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{DynamicResource ExtBrownColor}"></SolidColorBrush>
                                                    </TextBlock.Foreground>
                                                </TextBlock>
                                            </Button>
                                        </Border>
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Tự tạo trình chiếu" />
                        <TabItem Header="Tải về bài hát" />
                    </TabControl>
                </StackPanel>
                <!--#endregion Conent -->

                <StackPanel x:Name="accountButtons" Orientation="Horizontal" Visibility="Hidden"
                    FlowDirection="RightToLeft" Grid.Row="1" Grid.Column="1"
                    VerticalAlignment="Top" HorizontalAlignment="Right"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*30}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4.5}">
                    <StackPanel.Background>
                        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                    </StackPanel.Background>
                    <Button x:Name="btnAccount" Style="{StaticResource AccountButton}"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*12}">

                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                <Label Content="Tài khoản" HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}">
                                    <Image.Source>
                                        <ImageSource>Skin\Images\trinh-chieu\user.png</ImageSource>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Border>
                    </Button>
                    <Button x:Name="btnSetting" Style="{StaticResource AccountButton}"
                    MaxWidth="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}">
                                <Label Content="Cài đặt" HorizontalAlignment="Center" VerticalAlignment="Center" 
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}">
                                    <Image.Source>
                                        <ImageSource>Skin\Images\trinh-chieu\gear.png</ImageSource>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Border>
                    </Button>
                    <Button x:Name="btnNotification" Style="{StaticResource AccountButton}"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                <Label Content="Thông báo" HorizontalAlignment="Center" VerticalAlignment="Center" 
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}">
                                    <Image.Source>
                                        <ImageSource>Skin\Images\trinh-chieu\notification.png</ImageSource>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Border>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Grid>

</Window>

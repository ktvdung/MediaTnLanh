<Window x:Class="MediaTinLanh.UI.WPF.TrinhChieuWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MediaTinLanh.UI.WPF"
        xmlns:u="clr-namespace:MediaTinLanh.UI.WPF.ViewModels"
        xmlns:c="clr-namespace:MediaTinLanh.UI.WPF.Controls"
        xmlns:TuTaoTrinhChieu="clr-namespace:MediaTinLanh.UI.WPF.TaoTrinhChieu"
        mc:Ignorable="d"
        Title="TrinhChieuWindow"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        x:Name="windowTrinhChieu" WindowState="Maximized" WindowStyle="None" Style="{DynamicResource WindowStyle}" MouseDown="Window_MouseDown">
    <Window.Resources>
        <local:MathConverter x:Key="mathConverter"/>
        <local:MarginConverter x:Key="marginConverter"/>
        <local:TrangThaiConverter x:Key="TrangThaiConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>
        <!-- Colors -->
        <Color x:Key="ExtWhiteColor">#FFEFEFEF</Color>
        <Color x:Key="ExtGrayColor">#535353</Color>
        <Color x:Key="ExtBrownColor">#FFAD9579</Color>
        <Color x:Key="ExtGrayDarkerColor">#424242</Color>
        <Color x:Key="ExtGrayDarkestColor">#282828</Color>

        <SolidColorBrush x:Key="TextColor" Color="{DynamicResource ExtWhiteColor}"/>
        <SolidColorBrush x:Key="TextColorDark" Color="{DynamicResource ExtGrayDarkerColor}"/>
        <SolidColorBrush x:Key="SeperateLineColor" Color="{DynamicResource ExtGrayColor}"/>
        <!-- Style -->
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                CornerRadius="2"
                                GlassFrameThickness="0"
                                NonClientFrameEdges="None"
                                ResizeBorderThickness="3"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AccountButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderButton" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Border.BorderThickness" Value="1" />
                    <Setter Property="Border.BorderBrush" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="Background" >
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1,0,1,0" BorderBrush="#424242">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource ExtGrayDarkerColor}"></SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuButtonSpecial" TargetType="Button">
            <Setter Property="Background" >
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtBrownColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1,0,1,0" BorderBrush="#424242">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ExtWhiteColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource ExtWhiteColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ExtGrayDarkestColor}" />
                                                    <GradientStop Color="{DynamicResource ExtGrayDarkestColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                    <Grid>
                                        <Viewbox Width="8" Height="8">
                                            <Path
                                              Visibility="Collapsed"
                                              x:Name="CheckMark"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 16.36 0.00 L 23.00 0.00 L 23.00 0.66 C 18.30 6.49 14.21 12.75 10.10 19.00 L 9.40 19.00 C 6.50 15.61 3.37 12.42 0.00 9.49 L 0.00 8.04 C 1.01 7.44 2.01 6.82 3.01 6.20 C 5.21 9.07 7.65 11.75 9.99 14.51 C 12.36 9.78 14.16 4.80 16.36 0.00 Z">
                                                <Path.Stroke>
                                                    <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                                </Path.Stroke>
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                                </Path.Fill>
                                            </Path>
                                        </Viewbox>
                                        <Path Visibility="Collapsed"
                                              Width="7"
                                              Height="7"
                                              x:Name="InderminateMark"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource ExtBrownColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayDarkerColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtGrayDarkestColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ExtWhiteColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Resource -->
        <Button x:Key="Restore" Style="{StaticResource WindowButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Button.Template>
                <ControlTemplate>
                    <Border Name="borderMaxRes" Style="{DynamicResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Skin\Images\main\restore.png" Width="{Binding ElementName=btnMaximize, Path=ActualWidth}"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Key="Maximize" Style="{StaticResource WindowButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Button.Template>
                <ControlTemplate>
                    <Border Name="borderMaxRes" Style="{DynamicResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Skin\Images\main\maximize.png" Width="{Binding ElementName=btnMaximize, Path=ActualWidth}"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Window.Resources>
    <Window.Background>
        <!--<DrawingBrush>
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <ImageDrawing  Rect="0,0,10,10" ImageSource="Skin\Images\main\Background.png"/>
                    <DrawingGroup Opacity="0.102">
                        <ImageDrawing Rect="0,0,10,10" ImageSource="Skin\Images\main\logo gray.png"/>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>-->
        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
    </Window.Background>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="150*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid x:Name="grdWaiting" Grid.Column="1" Grid.Row="1" Panel.ZIndex="1" Background="Gray" Opacity="0.6" Visibility="Hidden">
            <fa:ImageAwesome x:Name="faCircleWaiting" RenderTransformOrigin="0.5, 0.5" Icon="Spinner" VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="40" >
                <fa:ImageAwesome.RenderTransform>
                    <RotateTransform/>
                </fa:ImageAwesome.RenderTransform>
                <fa:ImageAwesome.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                            From="White"
                                            To="White"      
                                            Duration="0:0:9.0"
                                            AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(RotateTransform.Angle)"
                                             To="360"
                                             Duration="0:0:1"
                                             RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </fa:ImageAwesome.Triggers>
            </fa:ImageAwesome>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1" Panel.ZIndex="1">
            <materialDesign:Snackbar x:Name="mySnackbar" MessageQueue="{materialDesign:MessageQueue}"/>
        </Grid>
        <DockPanel Grid.Column="1" Grid.Row="1">
            <Grid x:Name="gridTrinhChieu" Width="{Binding ActualWidth}" Height="{Binding ActualHeight}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*6}"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--#region Menu -->
                <StackPanel x:Name="stackpanelMenu" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Grid x:Name="gridMenu">
                        <Grid.Resources >
                            <!--<Style TargetType="Border" >
                                    <Setter Property="Padding" Value="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.006}" />
                                </Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Margin" Value="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.006}"></Setter>
                                </Style>-->
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" BorderBrush="Transparent" BorderThickness="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.005}">
                            <Image Source="Skin\Images\trinh-chieu\LogoLeft.png"/>
                        </Border>
                        <Border Grid.Column="1" Grid.Row="0" BorderBrush="Transparent" BorderThickness="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.005}">
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="btnThanCa" Style="{DynamicResource MenuButton}"
                                        Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}" Click="btnThanhCa_Click">
                                    <TextBlock x:Name="menuThanhCa"
                                     Foreground="White"
                                     FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}" 
                                     FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnThanCa, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                     LineStackingStrategy="BlockLineHeight" TextAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="Thánh Ca"/>
                                </Button>
                                <Button x:Name="btnKinhThanh" Style="{StaticResource MenuButton}" 
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}" Click="btnKinhThanh_Click">
                                    <TextBlock x:Name="menuKinhThanh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Kinh Thánh"/>
                                </Button>
                                <Button x:Name="btnVideo" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuVideo"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Video"/>
                                </Button>
                                <Button x:Name="btnHinhAnh" Style="{StaticResource MenuButton}" 
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuHinhAnh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Hình ảnh"/>
                                </Button>
                                <Button x:Name="btnDoKinhThanh" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuDoKinhThanh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Đố Kinh Thánh"/>
                                </Button>
                                <Button x:Name="btnTruyenTranh" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuTruyenTranh"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Truyện tranh"/>
                                </Button>
                                <Button x:Name="btnTranhToMau" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuTranhToMau"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Tranh Tô Màu"/>
                                </Button>
                                <Button x:Name="btnThietKe" Style="{StaticResource MenuButton}"
                                Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                    <TextBlock x:Name="menuThietKe"
                                   Foreground="White"
                                   FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.023}"
                                   FontFamily="{DynamicResource RobotoRegular}" IsHyphenationEnabled="True" LineHeight="{Binding ElementName=btnKinhThanh, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*50}"
                                   LineStackingStrategy="BlockLineHeight" TextAlignment="Left" TextWrapping="Wrap" Text="Thiết Kế"/>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                </StackPanel>
                <!--#endregion Menu -->

                <!--#region Window buttons -->
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <Button x:Name="btnMinimize" Style="{StaticResource WindowButton}"  VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnMinimize_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Border Style="{StaticResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Skin\Images\main\minimize.png" Width="{Binding ElementName=btnMinimize, Path=ActualWidth}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnMaximizeRestore" Style="{StaticResource WindowButton}" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnMaximizeRestore_Click">
                        <StaticResource ResourceKey="Restore"/>
                        <!--<Button.Template>
                            <ControlTemplate>
                                <Border Name="borderMaxRes" Style="{DynamicResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <Image Source="Skin\Images\main\restore.png" Width="{Binding ElementName=btnMaximize, Path=ActualWidth}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>-->
                    </Button>
                    <Button x:Name="btnClose" Style="{StaticResource WindowButton}" VerticalAlignment="Center"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4}"
                    Click="btnClose_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Border Style="{StaticResource BorderButton}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Skin\Images\main\close.png" Width="{Binding ElementName=btnClose, Path=ActualWidth}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                <!--#endregion Window Buttons -->

                <!--#region Conent -->
                <StackPanel x:Name="mainThanhCa" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible">
                    <StackPanel.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <TabControl x:Name="tabControl" TabStripPlacement="Top" Height="{Binding ElementName=gridTrinhChieu, Path=ActualHeight, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.9}">
                        <TabControl.Resources>
                            <!--<Style TargetType="TabControl">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource ExtGrayDarkestColor}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                            </Style>-->
                            <Style TargetType="{x:Type TabControl}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabControl">
                                            <Grid UseLayoutRounding="True">
                                                <Grid.RowDefinitions>
                                                    <!--3 rows for the TabPanel, overlap, and the selected content-->
                                                    <RowDefinition Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.047}" />
                                                    <RowDefinition Height="8" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <!--TabPanel needs to be on top of the selected content border-->
                                                <TabPanel IsItemsHost="True"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="2"
                                                        Panel.ZIndex="1" />
                                                <Border Grid.Row="1"
                                                        Grid.RowSpan="2"
                                                        Panel.ZIndex="0"
                                                        BorderThickness="2">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="{StaticResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                    </Border.Background>
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                    </Border.BorderBrush>
                                                    <ContentPresenter Margin="2" ContentSource="SelectedContent" />
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <!--<Style TargetType="TabPanel">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>-->
                            <Style TargetType="TabItem">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="FontFamily" Value="{StaticResource RobotoMedium}"/>
                                <Setter Property="FontSize" Value="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.016}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabItem">
                                            <Grid Name="Panel">
                                                <Border x:Name="tabBorderTop" BorderThickness="0 2 0 0" Height="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.05}">
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="{StaticResource ExtGrayColor}"></SolidColorBrush>
                                                    </Border.BorderBrush>
                                                </Border>
                                                <Border x:Name="tabBorder" BorderThickness="2 2 2 0" Height="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.047}">
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="{StaticResource ExtGrayColor}"></SolidColorBrush>
                                                    </Border.BorderBrush>
                                                    <ContentPresenter x:Name="ContentSite"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"
                                                              ContentSource="Header"
                                                              Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*20}"
                                                              Margin="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*1}"/>
                                                </Border>
                                                <Border x:Name="tabBorderBot" BorderThickness="0 0 0 2" Height="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.047}">
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                    </Border.BorderBrush>
                                                </Border>

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Panel" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtGrayDarkestColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="TabItem.Foreground">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter TargetName="tabBorder"
                                                            Property="Height"
                                                            Value="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.05}" />
                                                    <Setter TargetName="tabBorder"
                                                            Property="BorderThickness"
                                                            Value="2 2 2 0" />
                                                    <Setter TargetName="tabBorder" Property="BorderBrush">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Setter TargetName="tabBorderTop"
                                                            Property="Height"
                                                            Value="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.05}" />
                                                    <Setter TargetName="tabBorderTop"
                                                            Property="BorderThickness"
                                                            Value="2 2 2 0" />
                                                    <Setter TargetName="tabBorderTop" Property="BorderBrush">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Setter TargetName="tabBorderBot"
                                                            Property="Height"
                                                            Value="{Binding ElementName=tabControl, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.05}" />
                                                    <Setter TargetName="tabBorderBot"
                                                            Property="BorderThickness"
                                                            Value="2 2 2 0" />
                                                    <Setter TargetName="tabBorderBot" Property="BorderBrush">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtBrownColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="False">
                                                    <Setter TargetName="Panel" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{StaticResource ExtGrayDarkerColor}"></SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Thư viện bài hát">
                            <c:ucThuVienBaiHat />
                        </TabItem>
                        <TabItem Header="Tự tạo trình chiếu">
                            <TuTaoTrinhChieu:TuTaoTrinhChieuUC/>
                        </TabItem>
                        <!--<TabItem Header="Tải về bài hát" />-->
                    </TabControl>
                </StackPanel>
                <!--#endregion Conent -->

                <StackPanel x:Name="accountButtons" Orientation="Horizontal" Visibility="Hidden"
                    FlowDirection="RightToLeft" Grid.Row="1" Grid.Column="1"
                    VerticalAlignment="Top" HorizontalAlignment="Right"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*30}"
                    Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*4.5}">
                    <StackPanel.Background>
                        <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                    </StackPanel.Background>
                    <Button x:Name="btnAccount" Style="{StaticResource AccountButton}"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*12}">

                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                <Label Content="Tài khoản" HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}">
                                    <Image.Source>
                                        <ImageSource>Skin\Images\trinh-chieu\user.png</ImageSource>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Border>
                    </Button>
                    <Button x:Name="btnSetting" Style="{StaticResource AccountButton}"
                    MaxWidth="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*8}">
                                <Label Content="Cài đặt" HorizontalAlignment="Center" VerticalAlignment="Center" 
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}" Source="Skin\Images\trinh-chieu\gear.png"/>
                            </StackPanel>
                        </Border>
                    </Button>
                    <Button x:Name="btnNotification" Style="{StaticResource AccountButton}"
                    Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                        <Border Height="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*5}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ExtGrayColor}"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE/100*10}">
                                <Label Content="Thông báo" HorizontalAlignment="Center" VerticalAlignment="Center" 
                           FontFamily="{DynamicResource RobotoMedium}"
                           FontSize="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}"
                           Foreground="{DynamicResource TextColor}"></Label>
                                <Image Width="{Binding ElementName=gridTrinhChieu, Path=ActualWidth, Converter={StaticResource mathConverter}, ConverterParameter=@VALUE*0.015}">
                                    <Image.Source>
                                        <ImageSource>Skin\Images\trinh-chieu\notification.png</ImageSource>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Border>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Grid>

</Window>
